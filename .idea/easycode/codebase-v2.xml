<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/templates/home.html;C:/Users/ayeboue/Documents/Ligne b/templates/result.html;C:/Users/ayeboue/Documents/Ligne b/app.py" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/Users/ayeboue/Documents/Ligne b&quot;:&quot;{\&quot;/templates/index.html\&quot;:\&quot;This file is an HTML document that provides a web interface for diagnosing Excel files. It allows users to upload Excel files, select a sheet, and enter peak and off-peak capacities. The file then processes the uploaded files and displays the diagnostic results in a table.\\n\\nHere are the functions in the file:\\n\\n`addEventListener(\\u0027change\\u0027, function())`: This function is triggered when the user selects a file for the first upload, and it fetches the sheet names from the server and populates the sheet selection dropdown.\\n\\n`addEventListener(\\u0027click\\u0027, function())`: This function is triggered when the user clicks the \\\&quot;Diagnostic\\\&quot; button, and it sends the uploaded files and user-entered capacities to the server for processing, then displays the diagnostic results in a table.\\n\\n`isInRange(time, ranges)`: This function checks if a given time is within a set of time ranges.\\n\\n`getDiagnosis(maxVoyageurs, time)`: This function determines the diagnosis (over-offer or under-offer) based on the maximum number of passengers and the time of day.\\n\\n`getDiagnosticClass(diagnosis)`: This function returns a CSS class name based on the diagnosis.\&quot;,\&quot;/templates/result.html\&quot;:\&quot;This file appears to be an HTML template for displaying diagnostic results. It does not contain any classes or functions. Instead, it uses a template engine (likely Jinja2) to dynamically generate a table of diagnostic results based on the `diagnostics` data passed to it.\\n\\nThe file performs the following tasks:\\n\\n1. Defines the HTML structure with a `\\u003chead\\u003e` section and a `\\u003cbody\\u003e` section.\\n2. Displays a heading \\\&quot;RÃ©sultats du Diagnostic\\\&quot; (Diagnostic Results).\\n3. Creates a table with two columns: \\\&quot;Tranche Horaire\\\&quot; (Time Slot) and \\\&quot;Diagnostic\\\&quot;.\\n4. Iterates over the `diagnostics` data and populates the table rows with the corresponding time slot and diagnostic information.\&quot;,\&quot;/templates/select_sheet.html\&quot;:\&quot;This file is an HTML document that provides a web interface for diagnosing and optimizing Excel files. It includes a form for uploading files, a section for displaying the diagnostic results, and a section for optimizing the offer based on the diagnostic results. The file also includes JavaScript code that handles the file upload, processes the files, and displays the results.\\n\\n`getDiagnosis`: Determines whether the maximum number of passengers for a given time range is under or over the peak or off-peak capacity.\\n\\n`getDiagnosticClass`: Returns a CSS class name based on the diagnosis (under or over capacity).\\n\\n`optimizeFrequency`: Calculates the optimized frequency for a given capacity and current frequency.\&quot;,\&quot;/app.py\&quot;:\&quot;This file is a Flask web application that processes Excel files and generates diagnostics based on the data. It does not contain any classes, but it has the following functions:\\n\\n`convert_time_objects`: Converts time-related objects in the data to a standardized format.\\n\\n`generate_diagnostics`: Generates diagnostic information based on the input data, including the maximum number of passengers, the number of trains, and the frequency.\\n\\n`index`: Renders the index.html template, which is the main page of the application.\\n\\n`upload_first_file`: Handles the upload of the first Excel file and returns the available sheet names.\\n\\n`process_files`: Processes the three uploaded Excel files, generates the diagnostics, and returns the combined diagnostics.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/Users/ayeboue/Documents/Ligne b&quot;:&quot;{\&quot;/templates/index.html\&quot;:{\&quot;file_path\&quot;:\&quot;/templates/index.html\&quot;,\&quot;file_name\&quot;:\&quot;index.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/templates/result.html\&quot;:{\&quot;file_path\&quot;:\&quot;/templates/result.html\&quot;,\&quot;file_name\&quot;:\&quot;result.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/templates/select_sheet.html\&quot;:{\&quot;file_path\&quot;:\&quot;/templates/select_sheet.html\&quot;,\&quot;file_name\&quot;:\&quot;select_sheet.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/app.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app.py\&quot;,\&quot;file_name\&quot;:\&quot;app.py\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;convert_time_objects\&quot;,\&quot;method_parameters\&quot;:\&quot;(data)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[8,0],[18,19]]},{\&quot;method_name\&quot;:\&quot;generate_diagnostics\&quot;,\&quot;method_parameters\&quot;:\&quot;(df_sens, df_first, diagnostics_name)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;df_sens\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;df_first\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;diagnostics_name\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[21,0],[43,64]]},{\&quot;method_name\&quot;:\&quot;index\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[47,0],[48,40]]},{\&quot;method_name\&quot;:\&quot;upload_first_file\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[52,0],[60,80]]},{\&quot;method_name\&quot;:\&quot;process_files\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[64,0],[85,82]]}]}}&quot;}" />
  </component>
</project>